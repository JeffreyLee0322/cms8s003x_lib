C51 COMPILER V9.56.0.0   CMS8S003X_TIM2                                                    05/29/2018 18:09:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CMS8S003X_TIM2
OBJECT MODULE PLACED IN .\Objects\cms8s003x_tim2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c OMF2 OPT
                    -IMIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\CMS8S003x_StdPeriph_Driver\inc) DEBUG PRINT(.\Listings\cms8s003x_tim2.lst) 
                    -TABS(2) OBJECT(.\Objects\cms8s003x_tim2.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    cms8s003x_tim2.c
   4            * @author  LI WEI
   5            * @version V1.0.3
   6            * @date    04/24/2018
   7            * @brief   This file provides all the TIM1 firmware functions.
   8            ******************************************************************************
   9            * @copy
  10            *
  11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13            * TIME. AS A RESULT, CMSemicon SHALL NOT BE HELD LIABLE FOR ANY
  14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17            *
  18            * <h2><center>&copy; COPYRIGHT 2018 CMSemicon</center></h2>
  19            */
  20          
  21          /* Includes ------------------------------------------------------------------*/
  22          #include "cms8s003x_tim2.h"
  23          
  24          /** @addtogroup CMS8S003x_StdPeriph_Driver
  25            * @{
  26            */
  27          
  28          /* Private typedef -----------------------------------------------------------*/
  29          /* Private define ------------------------------------------------------------*/
  30          /* Private macro -------------------------------------------------------------*/
  31          /* Private variables ---------------------------------------------------------*/
  32          /* Private function prototypes -----------------------------------------------*/
  33          
  34          /**
  35            * @addtogroup TIM2_Public_Functions
  36            * @{
  37            */
  38          
  39          /**
  40            * @brief  Deinitializes the TIM2 peripheral registers to their default reset values.
  41            * @param  None
  42            * @retval None
  43            */
  44          void TIM2_DeInit(void)
  45          {
  46   1        T2CON &= 0x00; /* clear T2 control register reset value */
  47   1      }
  48          
  49          void TIM2_TimeBaseInit(TIM2_Init_TypeDef* TIM2_InitDef)
  50          {
  51   1        T2CON &= 0x00; 
  52   1        T2CON |= (uint8_t)(TIM2_InitDef->Clock_Source) | (uint8_t)((TIM2_InitDef->Clock_Prescaler) << 7) | (uint8
             -_t)((TIM2_InitDef->Reload_Mode) << 3);
C51 COMPILER V9.56.0.0   CMS8S003X_TIM2                                                    05/29/2018 18:09:10 PAGE 2   

  53   1        
  54   1        TH2 = ((TIM2_InitDef->Init_Value) >> 8)&0xFF;
  55   1        TL2 = (TIM2_InitDef->Init_Value)&0xFF;
  56   1      }
  57          
  58          void TIM2_OCInit(TIM2_OC_Init_TypeDef* TIM2_OCTpye)
  59          {
  60   1        /* Clear and Set TIM2 OC T2CON bit */
  61   1        T2CON &= ~0x44;
  62   1        T2CON |= (((uint8_t)(TIM2_OCTpye->OC_Mode << 2)) | ((uint8_t)(TIM2_OCTpye->OC_INT_Edge << 6)));
  63   1      
  64   1        switch((uint8_t)(TIM2_OCTpye->OC_Channel))
  65   1        {
  66   2          case TIM2_OC_Channel_0:
  67   2              RCRL = (uint8_t)(TIM2_OCTpye->OC_Init_Value);
  68   2              RCRH = (uint8_t)(TIM2_OCTpye->OC_Init_Value >> 8);
  69   2              break;
  70   2          case TIM2_OC_Channel_1:
  71   2              CCL1 = (uint8_t)(TIM2_OCTpye->OC_Init_Value);
  72   2              CCH1 = (uint8_t)(TIM2_OCTpye->OC_Init_Value >> 8);
  73   2              break;
  74   2          case TIM2_OC_Channel_2:
  75   2              CCL2 = (uint8_t)(TIM2_OCTpye->OC_Init_Value);
  76   2              CCH2 = (uint8_t)(TIM2_OCTpye->OC_Init_Value >> 8);
  77   2              break;
  78   2          case TIM2_OC_Channel_3:
  79   2              CCL3 = (uint8_t)(TIM2_OCTpye->OC_Init_Value);
  80   2              CCH3 = (uint8_t)(TIM2_OCTpye->OC_Init_Value >> 8);
  81   2              break;
  82   2          default: break;
  83   2        }
  84   1      }
  85          
  86          void TIM2_ICInit(TIM2_IC_Init_TypeDef* TIM2_ICTpye)
  87          {
  88   1        /* Clear and Set T2CON IC bits */
  89   1        T2CON &= ~0x40;
  90   1        T2CON |= (uint8_t)(TIM2_ICTpye->IC_INT_Edge);
  91   1        
  92   1        switch((uint8_t)(TIM2_ICTpye->IC_Channel))
  93   1        {
  94   2          case TIM2_IC_Channel_0:
  95   2              CAPCR0 &= 0xF0;
  96   2              CAPCR0 |= ((uint8_t)(TIM2_ICTpye->IC_Select));
  97   2              break;
  98   2          case TIM2_IC_Channel_1:
  99   2              CAPCR0 &= 0x0F;
 100   2              CAPCR0 |= ((uint8_t)(TIM2_ICTpye->IC_Select));
 101   2              break;
 102   2          case TIM2_IC_Channel_2:
 103   2              CAPCR1 &= 0xF0;
 104   2              CAPCR1 |= ((uint8_t)(TIM2_ICTpye->IC_Select));
 105   2              break;
 106   2          case TIM2_IC_Channel_3:
 107   2              CAPCR1 &= 0x0F;
 108   2              CAPCR1 |= ((uint8_t)(TIM2_ICTpye->IC_Select));
 109   2              break;
 110   2          default: break;
 111   2        }
 112   1      }
 113          
 114          void TIM2_Cmd(FunctionalState NewState)
C51 COMPILER V9.56.0.0   CMS8S003X_TIM2                                                    05/29/2018 18:09:10 PAGE 3   

 115          {
 116   1      
 117   1      }
*** WARNING C280 IN LINE 114 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c: 'NewState': unreference
             -d local variable
 118          
 119          void TIM2_ITConfig(TIM2_IT_Mask_TypeDef TIM2_Mask, TIM2_PRIORITY_TypeDef TIM2_Priority, FunctionalState Ne
             -wState)
 120          {
 121   1        /* Clear Timer2 All interrupt bit5 */
 122   1        IE &= ~0x20;
 123   1        
 124   1        /* Clear and Set Timer2 IP bit5 */
 125   1        IP &= ~0x40;
 126   1        IP |= TIM2_Priority;
 127   1        
 128   1        /* Clear and Set Timer2 T2IE */
 129   1        T2IE &= 0;
 130   1        T2IE |= TIM2_Mask;
 131   1        
 132   1        /* Set Timer2 All interrupt bit5 */
 133   1        if (NewState != _DISABLE)
 134   1        {
 135   2            IE |= TIM2_All_IT_Enable;
 136   2        }
 137   1        else
 138   1        {
 139   2            IE |= ~TIM2_All_IT_Enable;
 140   2        }
 141   1      }
 142          
 143          FlagStatus TIM2_GetFlagStatus(TIM2_FLAG_TypeDef TIM2_FLAG)
 144          {
 145   1      
 146   1      }
*** WARNING C173 IN LINE 146 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c: missing return-expressi
             -on
*** WARNING C280 IN LINE 143 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c: 'TIM2_FLAG': unreferenc
             -ed local variable
 147          
 148          void TIM2_ClearFlag(TIM2_FLAG_TypeDef TIM2_FLAG)
 149          {
 150   1      
 151   1      }
*** WARNING C280 IN LINE 148 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c: 'TIM2_FLAG': unreferenc
             -ed local variable
 152          
 153          ITStatus TIM2_GetITStatus(TIM2_IT_FLAG_TypeDef TIM2_IT)
 154          {
 155   1        ITStatus bitstatus = _RESET;
 156   1      
 157   1        uint8_t TIM0_itStatus = 0x0;
 158   1      
 159   1        TIM0_itStatus = (uint8_t)(T2IF & TIM2_IT);
 160   1      
 161   1        if (TIM0_itStatus != (uint8_t)_RESET )
 162   1        {
 163   2          bitstatus = _SET;
 164   2        }
 165   1        else
 166   1        {
 167   2          bitstatus = _RESET;
C51 COMPILER V9.56.0.0   CMS8S003X_TIM2                                                    05/29/2018 18:09:10 PAGE 4   

 168   2        }
 169   1        
 170   1        /* Return T2IF bit status */
 171   1        return (ITStatus)(bitstatus);
 172   1      }
 173          
 174          void TIM2_ClearITPendingBit(TIM2_IT_FLAG_TypeDef TIM2_IT)
 175          {
 176   1        T2IF &= (~TIM2_IT);
 177   1      }
 178          
 179          /**
 180            * @}
 181            */
 182          
 183          /**
 184            * @}
 185            */
 186          
 187          /************************************ (C) COPYRIGHT 2018 CMSemicon *****END OF FILE****/
*** WARNING C290 IN LINE 146 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_tim2.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
