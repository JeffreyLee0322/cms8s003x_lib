C51 COMPILER V9.56.0.0   CMS8S003X_ITC                                                     05/29/2018 18:09:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CMS8S003X_ITC
OBJECT MODULE PLACED IN .\Objects\cms8s003x_itc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_itc.c OMF2 OPTI
                    -MIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\CMS8S003x_StdPeriph_Driver\inc) DEBUG PRINT(.\Listings\cms8s003x_itc.lst) TA
                    -BS(2) OBJECT(.\Objects\cms8s003x_itc.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    cms8s003x_itc.c
   4            * @author  LI WEI
   5            * @version V1.0.3
   6            * @date    04/24/2010
   7            * @brief   This file provides all the ITC firmware functions.
   8            ******************************************************************************
   9            * @copy
  10            *
  11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13            * TIME. AS A RESULT, CMSemicon SHALL NOT BE HELD LIABLE FOR ANY
  14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17            *
  18            * <h2><center>&copy; COPYRIGHT 2018 CMSemicon</center></h2>
  19            */
  20          
  21          /* Includes ------------------------------------------------------------------*/
  22          #include "cms8s003x_itc.h"
  23          #include "cms8s003x_spi.h"
  24          #include "cms8s003x_tim01.h"
  25          #include "cms8s003x_tim2.h"
  26          #include "cms8s003x_gpio.h"
  27          
  28          /** @addtogroup CMS8S003x_StdPeriph_Driver
  29            * @{
  30            */
  31          
  32          /* Private typedef -----------------------------------------------------------*/
  33          /* Private define ------------------------------------------------------------*/
  34          /* Private macro -------------------------------------------------------------*/
  35          /* Private variables ---------------------------------------------------------*/
  36          uint32_t timer0Count = 0;
  37          uint32_t timer1Count = 0;
  38          /* Private function prototypes -----------------------------------------------*/
  39          /* Private functions ---------------------------------------------------------*/
  40          
  41          /** @addtogroup ITC_Private_Functions
  42            * @{
  43            */
  44          
  45          
  46          
  47          /**
  48            * @}
  49            */
  50          
  51          /** @addtogroup ITC_Public_Functions
  52            * @{
  53            */
C51 COMPILER V9.56.0.0   CMS8S003X_ITC                                                     05/29/2018 18:09:10 PAGE 2   

  54          
  55          /**
  56            * @brief  Deinitializes the ITC registers to their default reset value.
  57            * @param  None
  58            * @retval None
  59           */
  60          void ITC_DeInit(void)
  61          {
  62   1      
  63   1      }
  64          
  65          //unsigned int times = 0;   
  66          void SPI_ISR() interrupt 22
  67          {
  68   1        FlagStatus status = 0;
  69   1        ITStatus  itS = 0;
  70   1        if(SPI_GetFlagStatus(Peripheral_SPI_Interrupt)) //SPI总中断指示位  清除具体的中断标志位后 此位自动清除
  71   1        {
  72   2          if(SPI_GetITStatus(SPI_FLAG_SPISIF))        //SPI传输完毕中断标志位 先读SPSR 再度写SPDR后清0
  73   2          {
  74   3             /*if(times<5)
  75   3             {
  76   3               Master_Received[times] = SPI_ReceiveData();
  77   3              
  78   3               if(times < 4)
  79   3                 SPI_SendData(0x40);
  80   3             }
  81   3             times++;*/
  82   3          }
  83   2          else if(SPI_GetITStatus(SPI_FLAG_WCOL))   //SPI 写冲突中断标志位 先读SPSR 再读写SPDR后清0
  84   2          {
  85   3      
  86   3          }
  87   2          else if(SPI_GetITStatus(SPI_FLAG_MODF))   //SPI模式错误中断标志 先读SPSR 再读写SPCR后清0
  88   2          {
  89   3          }
  90   2        }
  91   1      }
  92          
  93          
  94          void timer0_int (void) interrupt 1
  95          {
  96   1        //这里不需要判断中断标志位，且中断标志位硬件自动清零
  97   1        uint32_t counter = 0;
  98   1        timer0Count++;
  99   1        if(timer0Count > 100) timer0Count = 0;
 100   1        if(timer0Count%2) GPIO_WriteBit(GPIO_PORT_1, GPIO_PIN_5, 1);
 101   1        else GPIO_WriteBit(GPIO_PORT_1, GPIO_PIN_5, 0);
 102   1        //counter = TIM0_GetCounter();
 103   1      }
 104          
 105          void timer1_int (void) interrupt 3
 106          {
 107   1        timer1Count++;
 108   1        if(timer1Count > 100) timer1Count = 0;
 109   1        if(timer1Count%2) GPIO_WriteBit(GPIO_PORT_1, GPIO_PIN_6, 1);
 110   1        else GPIO_WriteBit(GPIO_PORT_1, GPIO_PIN_6, 0);
 111   1      }
 112          
 113          void timer2_int (void) interrupt 5
 114          {
 115   1        P1_5 =~ P1_5;
C51 COMPILER V9.56.0.0   CMS8S003X_ITC                                                     05/29/2018 18:09:10 PAGE 3   

 116   1        if(TIM2_GetITStatus(TIM2_Overflow_Flag))
 117   1        {
 118   2            TIM2_ClearITPendingBit(TIM2_Overflow_Flag);
 119   2        }
 120   1        
 121   1        if(TIM2_GetITStatus(TIM2_Reload_Flag))
 122   1        {
 123   2            TIM2_ClearITPendingBit(TIM2_Reload_Flag);
 124   2        }
 125   1        
 126   1        if(TIM2_GetITStatus(TIM2_OOC3_Flag))
 127   1        {
 128   2            TIM2_ClearITPendingBit(TIM2_OOC3_Flag);
 129   2        }
 130   1        
 131   1        if(TIM2_GetITStatus(TIM2_OOC2_Flag))
 132   1        {
 133   2            TIM2_ClearITPendingBit(TIM2_OOC2_Flag);
 134   2        }
 135   1        
 136   1        if(TIM2_GetITStatus(TIM2_OOC1_Flag))
 137   1        {
 138   2            TIM2_ClearITPendingBit(TIM2_OOC1_Flag);
 139   2        }
 140   1        
 141   1        if(TIM2_GetITStatus(TIM2_OOC0_Flag))
 142   1        {
 143   2            TIM2_ClearITPendingBit(TIM2_OOC0_Flag);
 144   2        }
 145   1      }
 146          
 147          void timer3_int (void) interrupt 15
 148          {
 149   1      
 150   1      }
 151          
 152          void timer4_int (void) interrupt 16
 153          {
 154   1      
 155   1      }
 156          
 157          
 158          /**
 159            * @}
 160            */
 161          
 162          /**
 163            * @}
 164            */
 165          
 166          /******************* (C) COPYRIGHT 2018 CMSemicon *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   CMS8S003X_ITC                                                     05/29/2018 18:09:10 PAGE 4   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
