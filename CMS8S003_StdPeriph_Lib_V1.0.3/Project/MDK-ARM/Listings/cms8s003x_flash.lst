C51 COMPILER V9.59.0.0   CMS8S003X_FLASH                                                   06/26/2018 01:57:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CMS8S003X_FLASH
OBJECT MODULE PLACED IN .\Objects\cms8s003x_flash.obj
COMPILER INVOKED BY: D:\Install software\keil5\C51\BIN\C51.EXE ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_
                    -flash.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\CMS8S003x_StdPeriph_Driver\inc) DEBUG PRINT(.\Listings\cms8
                    -s003x_flash.lst) TABS(2) OBJECT(.\Objects\cms8s003x_flash.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    cms8s003x_flash.c
   4            * @author  LI WEI
   5            * @version V1.0.3
   6            * @date    04/24/2018
   7            * @brief   This file provides all the FLASH firmware functions.
   8            ******************************************************************************
   9            * @copy
  10            *
  11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13            * TIME. AS A RESULT, CMSemicon SHALL NOT BE HELD LIABLE FOR ANY
  14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17            *
  18            * <h2><center>&copy; COPYRIGHT 2018 CMSemicon</center></h2>
  19            */
  20          
  21          /* Includes ------------------------------------------------------------------*/
  22          #include "cms8s003x_flash.h"
  23          
  24          /** @addtogroup CMS8S003x_StdPeriph_Driver
  25            * @{
  26            */
  27          
  28          /* Private typedef -----------------------------------------------------------*/
  29          /* Private define ------------------------------------------------------------*/
  30          #define FLASH_OPERATION_ERROR   ((uint8_t)0x20)
  31          
  32          
  33          /* Private macro -------------------------------------------------------------*/
  34          /* Private variables ---------------------------------------------------------*/
  35          /* Private function prototypes -----------------------------------------------*/
  36          /* Private Constants ---------------------------------------------------------*/
  37          /* Public functions ----------------------------------------------------------*/
  38          
  39          /** @addtogroup FLASH_Public_functions
  40            * @{
  41            */
  42          
  43          /**
  44            * @brief  Deinitializes the FLASH registers to their default reset values.
  45            * @param  None
  46            * @retval None
  47            */
  48          void FLASH_DeInit(void)
  49          {
  50   1        MDATA |= 0xFF; //Flash data register deinit
  51   1        
  52   1        MADRL &= 0x00; //Flash address Low register deinit
  53   1        MADRH &= 0x00; //Flash address High register deinit
C51 COMPILER V9.59.0.0   CMS8S003X_FLASH                                                   06/26/2018 01:57:47 PAGE 2   

  54   1        
  55   1        MCTRL &= 0x00; //Flash control register deinit
  56   1        MCTRL |= 0x10;
  57   1      }
  58          
  59          /**
  60            * @brief  Programs one byte in program or data EEPROM memory
  61            * @param  Address : Address where the byte will be programmed
  62            * @param  Data : Value to be programmed
  63            * @retval None
  64            */
  65          void FLASH_ProgramByte(FLASH_Zone_TypeDef Flash_Zone, uint32_t Address, uint8_t Data)
  66          {
  67   1        /* Flash address config */
  68   1        MADRH = (uint8_t)(Address >> 8);
  69   1        MADRL = (uint8_t)Address;
  70   1        
  71   1        /* Judge Flash address whether 'FFH' or not */
  72   1        if((MCTRL & FLASH_ERROR_BIT) != 0)
  73   1        {
  74   2          return;
  75   2        }
  76   1        
  77   1        /* Flash data config */
  78   1        MDATA = Data;
  79   1        
  80   1        /* Enable flash R/W/E, Program mode, Zone select */
  81   1        //MCTRL &= 0x00;
  82   1        MCTRL = ((uint8_t)Flash_Zone | (uint8_t)Flash_OperationMode_Program | (uint8_t)FLASH_Enable_RWE);
  83   1        
  84   1        /* Wait flash program finished */
  85   1        while(MCTRL & FLASH_OPERATION_FINISHED_BIT);
*** ERROR C141 IN LINE 85 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ';', ex
             -pected ','
*** ERROR C141 IN LINE 85 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ')', ex
             -pected '__asm'
  86   1      }
  87          
  88          /**
  89            * @brief  Programs one word (4 bytes) in program or data EEPROM memory
  90            * @param  Address : The address where the data will be programmed
  91            * @param  Data : Value to be programmed
  92            * @retval None
  93            */
  94          void FLASH_ProgramWord(FLASH_Zone_TypeDef Flash_Zone, uint32_t Address, uint32_t Data)
  95          {
  96   1        uint8_t i = 0;
  97   1        uint32_t MoveAddress = 0;
  98   1        
  99   1        MoveAddress = Address;
 100   1        /* Program mode, Zone select */
 101   1        MCTRL = ((uint8_t)Flash_Zone | (uint8_t)Flash_OperationMode_Program);
 102   1        
 103   1        for(i = 0; i < 4; i++)
 104   1        {
 105   2          MoveAddress += i;
 106   2          
 107   2          /* Flash address config */
 108   2          MADRH = (uint8_t)(MoveAddress >> 8);
 109   2          MADRL = (uint8_t)MoveAddress;
 110   2          
 111   2          /* Judge Flash address whether 'FFH' or not */
C51 COMPILER V9.59.0.0   CMS8S003X_FLASH                                                   06/26/2018 01:57:47 PAGE 3   

 112   2          if((MCTRL & FLASH_ERROR_BIT) != 0)
 113   2          {
 114   3            return;
 115   3          }
 116   2          
 117   2          /* Flash data config */
 118   2          MDATA = (uint8_t)(Data >> (8*i));
 119   2          
 120   2          /* Enable flash R/W/E */
 121   2          MCTRL |= ((uint8_t)FLASH_Enable_RWE);
 122   2          
 123   2          /* Wait flash program finished */
 124   2          while(MCTRL & FLASH_OPERATION_FINISHED_BIT);
*** ERROR C141 IN LINE 124 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ';', e
             -xpected ','
*** ERROR C141 IN LINE 124 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ')', e
             -xpected '__asm'
 125   2        }
 126   1      }
 127          
 128          
 129          /**
 130            * @brief  Reads one byte from flash memory
 131            * @param  Address : Address to read
 132            * @retval Value of the byte
 133            */
 134          uint8_t FLASH_ReadByte(FLASH_Zone_TypeDef Flash_Zone, uint32_t Address)
 135          {
 136   1        uint8_t read_data = 0;
 137   1        
 138   1        /* Flash address config */
 139   1        MADRH = (uint8_t)(Address >> 8);
 140   1        MADRL = (uint8_t)Address;
 141   1      
 142   1        /* Enable flash R/W/E, Read mode, Zone select */
 143   1        MCTRL = ((uint8_t)Flash_Zone | (uint8_t)Flash_OperationMode_Read | (uint8_t)FLASH_Enable_RWE);
 144   1        
 145   1        /* Wait flash read finished */
 146   1        while(MCTRL & FLASH_OPERATION_FINISHED_BIT);
*** ERROR C141 IN LINE 146 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ';', e
             -xpected ','
*** ERROR C141 IN LINE 146 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ')', e
             -xpected '__asm'
 147   1        
 148   1        /* Flash data result */
 149   1        read_data = MDATA;
 150   1        
 151   1        return read_data;
 152   1      }
 153          
 154          /**
 155            * @brief  Erases a block in the program or data memory.
 156            * @note   This function should be called and executed from RAM.
 157            * @param  FLASH_MemType :  The type of memory to erase
 158            * @param  BlockNum : Indicates the block number to erase
 159            * @retval None.
 160            */
 161          void FLASH_EraseBlock(FLASH_Zone_TypeDef Flash_Zone, uint32_t Address)
 162          {
 163   1        /* Flash address config */
 164   1        MADRH = (uint8_t)(Address >> 8);
 165   1        MADRL = (uint8_t)Address;
C51 COMPILER V9.59.0.0   CMS8S003X_FLASH                                                   06/26/2018 01:57:47 PAGE 4   

 166   1        
 167   1        /* Enable flash R/W/E, Erase mode, Zone select */
 168   1        MCTRL = ((uint8_t)Flash_Zone | (uint8_t)Flash_OperationMode_Erase | (uint8_t)FLASH_Enable_RWE);
 169   1        
 170   1        /* Wait flash erase finished */
 171   1        while(MCTRL & FLASH_OPERATION_FINISHED_BIT);
*** ERROR C141 IN LINE 171 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ';', e
             -xpected ','
*** ERROR C141 IN LINE 171 OF ..\..\Libraries\CMS8S003x_StdPeriph_Driver\src\cms8s003x_flash.c: syntax error near ')', e
             -xpected '__asm'
 172   1      }
 173          
 174          /**
 175            * @}
 176            */
 177          
 178          /**
 179            * @}
 180            */
 181          
 182          /******************* (C) COPYRIGHT 2018 CMSemicon *****END OF FILE****/

C51 COMPILATION COMPLETE.  0 WARNING(S),  8 ERROR(S)
